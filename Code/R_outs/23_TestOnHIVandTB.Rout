
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

* Project '~/' loaded. [renv 0.13.2]
> rm(list = ls())
> 
> setwd("~/Documents/Research/Projects/Malaria")
> 
> renv::activate("~/Documents/Research/Projects/Malaria")
* Project '~/Documents/Research/Projects/Malaria' loaded. [renv 0.14.0]
Warning message:
renv 0.14.0 was loaded from project library, but this project is configured to use renv 0.12.2.
Use `renv::record("renv@0.14.0")` to record renv 0.14.0 in the lockfile.
Use `renv::restore(packages = "renv")` to install renv 0.12.2 into the project library. 
> 
> library(GEOquery)
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Setting options('download.file.method.GEOquery'='auto')
Setting options('GEOquery.inmemory.gpl'=FALSE)
> library(precrec)
> library(ggplot2)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

The following object is masked from ‘package:Biobase’:

    combine

The following object is masked from ‘package:BiocGenerics’:

    combine

> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following object is masked from ‘package:precrec’:

    auc

The following object is masked from ‘package:BiocGenerics’:

    var

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> 
> # HIVandTB <- getGEO("GSE39940", GSEMatrix = T, AnnotGPL = T)
> # HIVandTB <- HIVandTB$GSE39940_series_matrix.txt.gz
> # 
> # save(HIVandTB, file = "./Data/HIVandTB.rda")
> 
> load("./Data/HIVandTB.rda")
> 
> Expr_HIVandTB <- exprs(HIVandTB)
> Pheno_HIVandTB <- pData(HIVandTB)
> FeatData_HIVandTB <- fData(HIVandTB)
> 
> ############################
> ## Annotation
> 
> ## Expr_HIVandTB
> head(rownames(Expr_HIVandTB))
[1] "ILMN_1343291" "ILMN_1343295" "ILMN_1651199" "ILMN_1651209" "ILMN_1651210"
[6] "ILMN_1651221"
> rownames(Expr_HIVandTB) <- FeatData_HIVandTB$`Gene symbol`
> summary(is.na(rownames(Expr_HIVandTB)))
   Mode   FALSE 
logical   47323 
> #rownames(Expr_HIVandTB) <- gsub("-","", rownames(Expr_HIVandTB))
> #rownames(Expr_HIVandTB) <- gsub("_","",rownames(Expr_HIVandTB))
> sel <- which(apply(Expr_HIVandTB, 1, function(x) all(is.finite(x)) ))
> Expr_HIVandTB <- Expr_HIVandTB[sel, ]
> Expr_HIVandTB <- Expr_HIVandTB[!is.na(rownames(Expr_HIVandTB)),]
> dim(Expr_HIVandTB)
[1] 47323   334
> 
> range(Expr_HIVandTB)
[1]   -56.81582 65895.97000
> Expr_HIVandTB <- log2(Expr_HIVandTB + 57)
> Expr_HIVandTB <- t(scale(t(Expr_HIVandTB), center = TRUE, scale = TRUE))
> 
> 
> ####################################
> 
> ### Modify the phenotype
> 
> # Any Hiv positive or active TB or both will be case , if both are negative > control
> 
> # Pheno1
> 
> Pheno_HIVandTB$DiseaseStatus <- as.factor(Pheno_HIVandTB$`disease status:ch1`)
> Pheno_HIVandTB$DiseaseStatus <- ifelse(Pheno_HIVandTB$`disease status:ch1` %in% c("latent TB infection", "other disease") & Pheno_HIVandTB$`hiv status:ch1` == "HIV negative", "control", "case")
> table(Pheno_HIVandTB$DiseaseStatus)

   case control 
    177     157 
> Pheno_HIVandTB$DiseaseStatus <- factor(Pheno_HIVandTB$DiseaseStatus, levels = c("control", "case"))
> 
> all(rownames(Pheno_HIVandTB) == colnames(Expr_HIVandTB))
[1] TRUE
> 
> ClassHIVandTBVsHealthy<- Pheno_HIVandTB$DiseaseStatus
> 
> ####################################
> ## Load the severe malaria signature
> load("./Objs/RF_Comp.rda")
> 
> #################
> ## Predict
> 
> TestingData_HIVandTB <- t(Expr_HIVandTB)
> 
> PredVotes_HIVandTB <- predict(RF_Comp, newdata = TestingData_HIVandTB, type = "vote")
> PredResponse_HIVandTB <- predict(RF_Comp, TestingData_HIVandTB, type="response")
> 
> ROCTest <- roc(ClassHIVandTBVsHealthy, PredVotes_HIVandTB[,2], plot = F, print.auc = TRUE, levels = c("control", "case"), direction = "<", col = "blue", lwd = 2, grid = TRUE, auc = TRUE, ci = TRUE)
> ROCTest

Call:
roc.default(response = ClassHIVandTBVsHealthy, predictor = PredVotes_HIVandTB[,     2], levels = c("control", "case"), direction = "<", auc = TRUE,     ci = TRUE, plot = F, print.auc = TRUE, col = "blue", lwd = 2,     grid = TRUE)

Data: PredVotes_HIVandTB[, 2] in 157 controls (ClassHIVandTBVsHealthy control) < 177 cases (ClassHIVandTBVsHealthy case).
Area under the curve: 0.5239
95% CI: 0.4617-0.586 (DeLong)
> 
> # For ROC and PRC curves
> sscurves_HIVandTB <- evalmod(scores = PredVotes_HIVandTB[,2], labels = ClassHIVandTBVsHealthy)
> sscurves_HIVandTB

    === AUCs ===

     Model name Dataset ID Curve type       AUC
   1         m1          1        ROC 0.5238764
   2         m1          1        PRC 0.5677614


    === Input data ===

     Model name Dataset ID # of negatives # of positives
   1         m1          1            157            177

> ROC_HIVandTB <- autoplot(sscurves_HIVandTB, curvetype = c("ROC")) + labs(title = "ROC curve of the complicated malaria signature in GSE39940 (HIV +ve or active TB vs healthy)") + annotate("text", x = .65, y = .25, label = paste("AUC = 0.52"), size = 4)
> PRC_HIVandTB <- autoplot(sscurves_HIVandTB, curvetype = c("PRC")) + labs(title = "PRC curve of the complicated malaria signature in GSE39940 (HIV +ve or active TB vs healthy)") + annotate("text", x = .65, y = .25, label = paste("AUPRC = 0.57"), size = 4)
> 
> save(ROC_HIVandTB, PRC_HIVandTB, file = "./Objs/HIVandTB_Curves.rda")
> 
> ########################################################################################
> 
> 
> ####################################
> ## Load the cerebral malaria signature
> load("./Objs/RF_Cerebral.rda")
> 
> #################
> ## Predict
> PredVotes_HIVandTB_cerebral <- predict(RF_Cerebral, newdata = TestingData_HIVandTB, type = "vote")
> PredResponse_HIVandTB_cerebral <- predict(RF_Cerebral, TestingData_HIVandTB, type="response")
> 
> ROCTest_cerebral <- roc(ClassHIVandTBVsHealthy, PredVotes_HIVandTB_cerebral[,2], plot = F, print.auc = TRUE, levels = c("control", "case"), direction = "<", col = "blue", lwd = 2, grid = TRUE, auc = TRUE, ci = TRUE)
> ROCTest_cerebral

Call:
roc.default(response = ClassHIVandTBVsHealthy, predictor = PredVotes_HIVandTB_cerebral[,     2], levels = c("control", "case"), direction = "<", auc = TRUE,     ci = TRUE, plot = F, print.auc = TRUE, col = "blue", lwd = 2,     grid = TRUE)

Data: PredVotes_HIVandTB_cerebral[, 2] in 157 controls (ClassHIVandTBVsHealthy control) < 177 cases (ClassHIVandTBVsHealthy case).
Area under the curve: 0.3827
95% CI: 0.3227-0.4427 (DeLong)
> 
> # For ROC and PRC curves
> sscurves_HIVandTB_cerebral <- evalmod(scores = PredVotes_HIVandTB_cerebral[,2], labels = ClassHIVandTBVsHealthy)
> sscurves_HIVandTB_cerebral

    === AUCs ===

     Model name Dataset ID Curve type       AUC
   1         m1          1        ROC 0.3827054
   2         m1          1        PRC 0.4660755


    === Input data ===

     Model name Dataset ID # of negatives # of positives
   1         m1          1            157            177

> ROC_HIVandTB_cerebral <- autoplot(sscurves_HIVandTB_cerebral, curvetype = c("ROC")) + labs(title = "ROC curve of the cerebral malaria signature in GSE39940 (HIV +ve or active TB vs healthy)") + annotate("text", x = .65, y = .25, label = paste("AUC = 0.38"), size = 4)
> PRC_HIVandTB_cerebral <- autoplot(sscurves_HIVandTB_cerebral, curvetype = c("PRC")) + labs(title = "PRC curve of the cerebral malaria signature in GSE39940 (HIV +ve or active TB vs healthy)") + annotate("text", x = .65, y = .25, label = paste("AUPRC = 0.47"), size = 4)
> 
> save(ROC_HIVandTB_cerebral, PRC_HIVandTB_cerebral, file = "./Objs/HIVandTB_Curves_cerebral.rda")
> 
> #####################
> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices datasets  utils     methods  
[8] base     

other attached packages:
[1] pROC_1.18.0         randomForest_4.6-14 ggplot2_3.3.5      
[4] precrec_0.12.7      GEOquery_2.58.0     Biobase_2.50.0     
[7] BiocGenerics_0.36.0

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.7        plyr_1.8.6        pillar_1.6.2      compiler_4.0.3   
 [5] tools_4.0.3       lifecycle_1.0.0   tibble_3.1.4      gtable_0.3.0     
 [9] pkgconfig_2.0.3   rlang_0.4.11      DBI_1.1.1         withr_2.4.2      
[13] dplyr_1.0.7       xml2_1.3.2        generics_0.1.0    vctrs_0.3.8      
[17] hms_1.1.0         grid_4.0.3        tidyselect_1.1.1  glue_1.4.2       
[21] data.table_1.14.0 R6_2.5.1          fansi_0.5.0       limma_3.46.0     
[25] tzdb_0.1.2        readr_2.0.1       purrr_0.3.4       tidyr_1.1.3      
[29] magrittr_2.0.1    scales_1.1.1      ellipsis_0.3.2    assertthat_0.2.1 
[33] colorspace_2.0-2  renv_0.14.0       utf8_1.2.2        munsell_0.5.0    
[37] crayon_1.4.1     
> 
> proc.time()
   user  system elapsed 
  6.594   0.855  10.753 
