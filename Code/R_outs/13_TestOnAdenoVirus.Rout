
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

* Project '~/' loaded. [renv 0.13.2]
> ##################################
> ## Test both the severe and cerebral malaria signatures on Adenovirus and other infections
> 
> rm(list = ls())
> 
> setwd("~/Documents/Research/Projects/Malaria")
> 
> renv::activate("~/Documents/Research/Projects/Malaria")
* Project '~/Documents/Research/Projects/Malaria' loaded. [renv 0.14.0]
Warning message:
renv 0.14.0 was loaded from project library, but this project is configured to use renv 0.12.2.
Use `renv::record("renv@0.14.0")` to record renv 0.14.0 in the lockfile.
Use `renv::restore(packages = "renv")` to install renv 0.12.2 into the project library. 
> 
> library(GEOquery)
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Setting options('download.file.method.GEOquery'='auto')
Setting options('GEOquery.inmemory.gpl'=FALSE)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:Biobase’:

    combine

The following object is masked from ‘package:BiocGenerics’:

    combine

> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following object is masked from ‘package:BiocGenerics’:

    var

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(precrec)

Attaching package: ‘precrec’

The following object is masked from ‘package:pROC’:

    auc

> library(ggplot2)

Attaching package: ‘ggplot2’

The following object is masked from ‘package:randomForest’:

    margin

> 
> # AdenovirusDataset1 <- getGEO("GSE40396", GSEMatrix = T, AnnotGPL = T)
> # AdenovirusDataset1 <- AdenovirusDataset1$GSE40396_series_matrix.txt.gz
> # 
> # save(AdenovirusDataset1, file = "./Data/AdenovirusDataset1.rda")
> 
> load("./Data/AdenovirusDataset1.rda")
> 
> Expr_Adenovirus1 <- exprs(AdenovirusDataset1)
> Pheno_Adenovirus1 <- pData(AdenovirusDataset1)
> FeatData_Adenovirus1 <- fData(AdenovirusDataset1)
> 
> 
> ############################
> ## Annotation
> 
> ## Expr_Adenovirus1
> head(rownames(Expr_Adenovirus1))
[1] "ILMN_1343291" "ILMN_1343295" "ILMN_1651199" "ILMN_1651209" "ILMN_1651210"
[6] "ILMN_1651221"
> rownames(Expr_Adenovirus1) <- FeatData_Adenovirus1$`Gene symbol`
> summary(is.na(rownames(Expr_Adenovirus1)))
   Mode   FALSE 
logical   47300 
> #rownames(Expr_Adenovirus1) <- gsub("-","", rownames(Expr_Adenovirus1))
> #rownames(Expr_Adenovirus1) <- gsub("_","",rownames(Expr_Adenovirus1))
> sel <- which(apply(Expr_Adenovirus1, 1, function(x) all(is.finite(x)) ))
> Expr_Adenovirus1 <- Expr_Adenovirus1[sel, ]
> Expr_Adenovirus1 <- Expr_Adenovirus1[!is.na(rownames(Expr_Adenovirus1)),]
> dim(Expr_Adenovirus1)
[1] 47300    65
> 
> range(Expr_Adenovirus1)
[1]  5.86328 15.43110
>  
> Expr_Adenovirus1 <- t(scale(t(Expr_Adenovirus1), center = TRUE, scale = TRUE))
> 
> 
> ####################################
> 
> ### Modify the phenotype
> 
> # Many infections vs normal
> # Pheno1
> Pheno_Adenovirus1$DiseaseStatus <- as.factor(Pheno_Adenovirus1$`pathogen:ch1`)
> levels(Pheno_Adenovirus1$DiseaseStatus) <- c("case", "case", "case", "case", "case", "case", "case", "control", "case", "case") 
> table(Pheno_Adenovirus1$DiseaseStatus)

   case control 
     43      22 
> Pheno_Adenovirus1$DiseaseStatus <- factor(Pheno_Adenovirus1$DiseaseStatus, levels = c("control", "case"))
> 
> #expr1 <- expr1[, colnames(expr1) %in% rownames(Pheno_Adenovirus1)]
> #all(rownames(Pheno_Adenovirus1) == colnames(expr1))
> 
> ClassInfectionVsNormal <- Pheno_Adenovirus1$DiseaseStatus
> 
> ####################################
> ## Load the model
> load("./Objs/RF_Comp.rda")
> 
> #################
> ## Predict in the Adenovirus dataset (Adenovirus vs normal)
> 
> TestingData_Adenovirus <- t(Expr_Adenovirus1)
> 
> PredVotes_Adenovirus <- predict(RF_Comp, newdata = TestingData_Adenovirus, type = "vote")
> PredResponse_Adenovirus <- predict(RF_Comp, TestingData_Adenovirus, type="response")
> 
> ROCTest <- roc(ClassInfectionVsNormal, PredVotes_Adenovirus[,2], plot = F, print.auc = TRUE, levels = c("control", "case"), direction = "<", col = "blue", lwd = 2, grid = TRUE, auc = TRUE, ci = TRUE)
> ROCTest

Call:
roc.default(response = ClassInfectionVsNormal, predictor = PredVotes_Adenovirus[,     2], levels = c("control", "case"), direction = "<", auc = TRUE,     ci = TRUE, plot = F, print.auc = TRUE, col = "blue", lwd = 2,     grid = TRUE)

Data: PredVotes_Adenovirus[, 2] in 22 controls (ClassInfectionVsNormal control) < 43 cases (ClassInfectionVsNormal case).
Area under the curve: 0.6025
95% CI: 0.4559-0.7492 (DeLong)
> 
> # For ROC and PRC curves
> sscurves_Adenovirus1 <- evalmod(scores = PredVotes_Adenovirus[,2], labels = ClassInfectionVsNormal)
> sscurves_Adenovirus1

    === AUCs ===

     Model name Dataset ID Curve type       AUC
   1         m1          1        ROC 0.6025370
   2         m1          1        PRC 0.7368248


    === Input data ===

     Model name Dataset ID # of negatives # of positives
   1         m1          1             22             43

> ROC_Adenovirus <- autoplot(sscurves_Adenovirus1, curvetype = c("ROC")) + labs(title = "ROC curve of the complicated malaria signature in GSE40396 (Many infections)") + annotate("text", x = .65, y = .25, label = paste("AUC = 0.60"), size = 4)
> PRC_Adenovirus <- autoplot(sscurves_Adenovirus1, curvetype = c("PRC")) + labs(title = "PRC curve of the complicated malaria signature in GSE40396 (Many infections)") + annotate("text", x = .65, y = .25, label = paste("AUPRC = 0.736"), size = 4)
> 
> save(ROC_Adenovirus, PRC_Adenovirus, file = "./Objs/Adenovirus1_Curves.rda")
> 
> ########################################################################################
> #########################################################################################
> # ###### AdenoVirus vs normal
> # 
> # ### Modify the phenotype
> # # keep just adenovirus
> # 
> # # Pheno1
> # Pheno_Adenovirus1 <- Pheno_Adenovirus1[Pheno_Adenovirus1$`pathogen:ch1` %in%  c("Adenovirus", "None"), ]
> # Pheno_Adenovirus1$DiseaseStatus2 <- as.factor(Pheno_Adenovirus1$`pathogen:ch1`)
> # levels(Pheno_Adenovirus1$DiseaseStatus2) <- c("AdenoVirus", "control") 
> # table(Pheno_Adenovirus1$DiseaseStatus2)
> # Pheno_Adenovirus1$DiseaseStatus2 <- factor(Pheno_Adenovirus1$DiseaseStatus2, levels = c("control", "AdenoVirus"))
> # 
> # Expr_Adenovirus1 <- Expr_Adenovirus1[, colnames(Expr_Adenovirus1) %in% rownames(Pheno_Adenovirus1)]
> # all(rownames(Pheno_Adenovirus1) == colnames(Expr_Adenovirus1))
> # 
> # ClassAdenoVsNormal <- Pheno_Adenovirus1$DiseaseStatus2
> # 
> # ####################################
> # ## Load the severe malaria signature
> # load("./Objs/RF_Comp.rda")
> # 
> # #################
> # ## Predict in the Adenovirus dataset
> # 
> # TestingData_Adenovirus <- t(Expr_Adenovirus1)
> # 
> # PredVotes_Adenovirus <- predict(RF_Comp, newdata = TestingData_Adenovirus, type = "vote")
> # PredResponse_Adenovirus <- predict(RF_Comp, TestingData_Adenovirus, type="response")
> # 
> # ROCTest <- roc(ClassAdenoVsNormal, PredVotes_Adenovirus[,2], plot = F, print.auc = TRUE, levels = c("control", "AdenoVirus"), direction = "<", col = "blue", lwd = 2, grid = TRUE, auc = TRUE, ci = TRUE)
> # ROCTest
> # 
> # # For ROC and PRC curves
> # sscurves_Adenovirus1 <- evalmod(scores = PredVotes_Adenovirus[,2], labels = ClassAdenoVsNormal)
> # sscurves_Adenovirus1
> # ROC_Adenovirus <- autoplot(sscurves_Adenovirus1, curvetype = c("ROC")) + labs(title = "ROC curve of the complicated malaria signature in GSE40396 (Adenovirus)") + annotate("text", x = .65, y = .25, label = paste("AUC = 0.68"), size = 4)
> # PRC_Adenovirus <- autoplot(sscurves_Adenovirus1, curvetype = c("PRC")) + labs(title = "PRC curve of the complicated malaria signature in GSE40396 (Adenovirus)") + annotate("text", x = .65, y = .25, label = paste("AUPRC = 0.54"), size = 4)
> # 
> # save(ROC_Adenovirus, PRC_Adenovirus, file = "./Objs/Adenovirus1_Curves.rda")
> # 
> ####################################
> ## Load the cerebral malaria signature
> load("./Objs/RF_Cerebral.rda")
> 
> #################
> ## Predict in the Adenovirus dataset
> 
> PredVotes_Adenovirus_cerebral <- predict(RF_Cerebral, newdata = TestingData_Adenovirus, type = "vote")
> PredResponse_Adenovirus_cerebral <- predict(RF_Cerebral, TestingData_Adenovirus, type="response")
> 
> # For ROC and PRC curves
> sscurves_Adenovirus_cerebral <- evalmod(scores = PredVotes_Adenovirus_cerebral[,2], labels = ClassInfectionVsNormal)
> sscurves_Adenovirus_cerebral

    === AUCs ===

     Model name Dataset ID Curve type       AUC
   1         m1          1        ROC 0.3520085
   2         m1          1        PRC 0.6157468


    === Input data ===

     Model name Dataset ID # of negatives # of positives
   1         m1          1             22             43

> ROC_Adenovirus_cerebral <- autoplot(sscurves_Adenovirus_cerebral, curvetype = c("ROC")) + labs(title = "ROC curve of the cerebral malaria signature in GSE40396 (Adenovirus)") + annotate("text", x = .65, y = .25, label = paste("AUC = 0.35"), size = 4)
> PRC_Adenovirus_cerebral <- autoplot(sscurves_Adenovirus_cerebral, curvetype = c("PRC")) + labs(title = "PRC curve of the cerebral malaria signature in GSE40396 (Adenovirus)") + annotate("text", x = .65, y = .25, label = paste("AUPRC = 0.62"), size = 4)
> 
> save(ROC_Adenovirus_cerebral, PRC_Adenovirus_cerebral, file = "./Objs/Adenovirus1_Curves_cerebral.rda")
> 
> 
> proc.time()
   user  system elapsed 
  3.857   0.493   4.846 
