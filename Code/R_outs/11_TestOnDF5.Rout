
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

* Project '~/' loaded. [renv 0.13.2]
> ##################################
> ## Test both the severe and cerebral malaria signatures on Dengue fever
> 
> rm(list = ls())
> 
> setwd("~/Documents/Research/Projects/Malaria")
> 
> renv::activate("~/Documents/Research/Projects/Malaria")
* Project '~/Documents/Research/Projects/Malaria' loaded. [renv 0.14.0]
Warning message:
renv 0.14.0 was loaded from project library, but this project is configured to use renv 0.12.2.
Use `renv::record("renv@0.14.0")` to record renv 0.14.0 in the lockfile.
Use `renv::restore(packages = "renv")` to install renv 0.12.2 into the project library. 
> 
> library(GEOquery)
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Setting options('download.file.method.GEOquery'='auto')
Setting options('GEOquery.inmemory.gpl'=FALSE)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:Biobase’:

    combine

The following object is masked from ‘package:BiocGenerics’:

    combine

> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following object is masked from ‘package:BiocGenerics’:

    var

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(precrec)

Attaching package: ‘precrec’

The following object is masked from ‘package:pROC’:

    auc

> library(ggplot2)

Attaching package: ‘ggplot2’

The following object is masked from ‘package:randomForest’:

    margin

> 
> # DengueDataset5 <- getGEO("GSE17924", GSEMatrix = T, AnnotGPL = T)
> # DengueDataset5 <- DengueDataset5$GSE17924_series_matrix.txt.gz
> # 
> # save(DengueDataset5, file = "./Data/DengueDataset5.rda")
> 
> load("./Data/DengueDataset5.rda")
> 
> 
> Expr_Dengue5 <- exprs(DengueDataset5)
> Pheno_Dengue5 <- pData(DengueDataset5)
> FeatData_Dengue5 <- fData(DengueDataset5)
> 
> 
> ############################
> ## Annotation
> 
> ## Expr_Dengue5
> head(rownames(Expr_Dengue5))
[1] "12" "13" "14" "15" "16" "17"
> rownames(Expr_Dengue5) <- FeatData_Dengue5$`Gene symbol`
> summary(is.na(rownames(Expr_Dengue5)))
   Mode   FALSE 
logical   43376 
> #rownames(Expr_Dengue5) <- gsub("-","", rownames(Expr_Dengue5))
> #rownames(Expr_Dengue5) <- gsub("_","",rownames(Expr_Dengue5))
> sel <- which(apply(Expr_Dengue5, 1, function(x) all(is.finite(x)) ))
> Expr_Dengue5 <- Expr_Dengue5[sel, ]
> Expr_Dengue5 <- Expr_Dengue5[!is.na(rownames(Expr_Dengue5)),]
> dim(Expr_Dengue5)
[1] 43376    48
> 
> range(Expr_Dengue5) 
[1]  1.738784 18.997364
> 
> Expr_Dengue5 <- t(scale(t(Expr_Dengue5), center = TRUE, scale = TRUE))
> 
> 
> ####################################
> 
> 
> ########################################################################################
> #########################################################################################
> ###### DF vs DHF and DSS
> 
> ### Modify the phenotype
> 
> # Pheno1
> Pheno_Dengue5$DiseaseStatus <- as.factor(Pheno_Dengue5$`severity:ch1`)
> levels(Pheno_Dengue5$DiseaseStatus) <- c("DF", "ComplicatedDF", "ComplicatedDF") 
> table(Pheno_Dengue5$DiseaseStatus)

           DF ComplicatedDF 
           16            32 
> 
> all(rownames(Pheno_Dengue5) == colnames(Expr_Dengue5))
[1] TRUE
> 
> ClassDFvsComDengue <- Pheno_Dengue5$DiseaseStatus
> 
> ####################################
> ## Load the severe malaria signature
> load("./Objs/RF_Comp.rda")
> 
> #################
> ## Predict
> 
> TestingData_Dengue <- t(Expr_Dengue5)
> 
> PredVotes_Dengue <- predict(RF_Comp, newdata = TestingData_Dengue, type = "vote")
> PredResponse_Dengue <- predict(RF_Comp, TestingData_Dengue, type="response")
> 
> ROCTest <- roc(ClassDFvsComDengue, PredVotes_Dengue[,2], plot = F, print.auc = TRUE, levels = c("DF", "ComplicatedDF"), direction = "<", col = "blue", lwd = 2, grid = TRUE, auc = TRUE, ci = TRUE)
> ROCTest

Call:
roc.default(response = ClassDFvsComDengue, predictor = PredVotes_Dengue[,     2], levels = c("DF", "ComplicatedDF"), direction = "<", auc = TRUE,     ci = TRUE, plot = F, print.auc = TRUE, col = "blue", lwd = 2,     grid = TRUE)

Data: PredVotes_Dengue[, 2] in 16 controls (ClassDFvsComDengue DF) < 32 cases (ClassDFvsComDengue ComplicatedDF).
Area under the curve: 0.5225
95% CI: 0.3523-0.6926 (DeLong)
> 
> # For ROC and PRC curves
> sscurves_Dengue5 <- evalmod(scores = PredVotes_Dengue[,2], labels = ClassDFvsComDengue)
> sscurves_Dengue5

    === AUCs ===

     Model name Dataset ID Curve type       AUC
   1         m1          1        ROC 0.5224609
   2         m1          1        PRC 0.7547640


    === Input data ===

     Model name Dataset ID # of negatives # of positives
   1         m1          1             16             32

> ROC_Dengue5 <- autoplot(sscurves_Dengue5, curvetype = c("ROC")) + labs(title = "ROC curve of the complicated malaria signature in GSE17924 (Dengue fever)") + annotate("text", x = .65, y = .25, label = paste("AUC = 0.52"), size = 3)
> PRC_Dengue5 <- autoplot(sscurves_Dengue5, curvetype = c("PRC")) + labs(title = "PRC curve of the complicated malaria signature in GSE17924 (Dengue fever)") + annotate("text", x = .65, y = .25, label = paste("AUPRC = 0.755"), size = 3)
> 
> save(ROC_Dengue5, PRC_Dengue5, file = "./Objs/Dengue5_Curves.rda")
> 
> 
> ####################################
> ## Load the cerebral malaria signature
> load("./Objs/RF_Cerebral.rda")
> 
> #################
> ## Predict
> PredVotes_Dengue_cerebral <- predict(RF_Cerebral, newdata = TestingData_Dengue, type = "vote")
> PredResponse_Dengue_cerebral <- predict(RF_Cerebral, TestingData_Dengue, type="response")
> 
> ROCTest_cerebral <- roc(ClassDFvsComDengue, PredVotes_Dengue_cerebral[,2], plot = F, print.auc = TRUE, levels = c("DF", "ComplicatedDF"), direction = "<", col = "blue", lwd = 2, grid = TRUE, auc = TRUE, ci = TRUE)
> ROCTest_cerebral

Call:
roc.default(response = ClassDFvsComDengue, predictor = PredVotes_Dengue_cerebral[,     2], levels = c("DF", "ComplicatedDF"), direction = "<", auc = TRUE,     ci = TRUE, plot = F, print.auc = TRUE, col = "blue", lwd = 2,     grid = TRUE)

Data: PredVotes_Dengue_cerebral[, 2] in 16 controls (ClassDFvsComDengue DF) < 32 cases (ClassDFvsComDengue ComplicatedDF).
Area under the curve: 0.6572
95% CI: 0.491-0.8234 (DeLong)
> 
> # For ROC and PRC curves
> sscurves_Dengue5_cerebral <- evalmod(scores = PredVotes_Dengue_cerebral[,2], labels = ClassDFvsComDengue)
> sscurves_Dengue5_cerebral

    === AUCs ===

     Model name Dataset ID Curve type       AUC
   1         m1          1        ROC 0.6572266
   2         m1          1        PRC 0.7766603


    === Input data ===

     Model name Dataset ID # of negatives # of positives
   1         m1          1             16             32

> ROC_Dengue5_cerebral <- autoplot(sscurves_Dengue5_cerebral, curvetype = c("ROC")) + labs(title = "ROC curve of the cerebral malaria signature in GSE17924 (Dengue fever)") + annotate("text", x = .65, y = .25, label = paste("AUC = 0.66"), size = 3)
> PRC_Dengue5_cerebral <- autoplot(sscurves_Dengue5_cerebral, curvetype = c("PRC")) + labs(title = "PRC curve of the cerebral malaria signature in GSE17924 (Dengue fever)") + annotate("text", x = .65, y = .25, label = paste("AUPRC = 0.78"), size = 3)
> 
> save(ROC_Dengue5_cerebral, PRC_Dengue5_cerebral, file = "./Objs/Dengue5_Curves_cerebral.rda")
> 
> 
> proc.time()
   user  system elapsed 
  3.601   0.447   4.545 
