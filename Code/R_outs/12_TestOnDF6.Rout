
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

* Project '~/' loaded. [renv 0.13.2]
> ##################################
> ## Test both the severe and cerebral malaria signatures on Dengue fever
> 
> rm(list = ls())
> 
> setwd("~/Documents/Research/Projects/Malaria")
> 
> renv::activate("~/Documents/Research/Projects/Malaria")
* Project '~/Documents/Research/Projects/Malaria' loaded. [renv 0.14.0]
Warning message:
renv 0.14.0 was loaded from project library, but this project is configured to use renv 0.12.2.
Use `renv::record("renv@0.14.0")` to record renv 0.14.0 in the lockfile.
Use `renv::restore(packages = "renv")` to install renv 0.12.2 into the project library. 
> 
> library(GEOquery)
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Setting options('download.file.method.GEOquery'='auto')
Setting options('GEOquery.inmemory.gpl'=FALSE)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:Biobase’:

    combine

The following object is masked from ‘package:BiocGenerics’:

    combine

> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following object is masked from ‘package:BiocGenerics’:

    var

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(precrec)

Attaching package: ‘precrec’

The following object is masked from ‘package:pROC’:

    auc

> library(ggplot2)

Attaching package: ‘ggplot2’

The following object is masked from ‘package:randomForest’:

    margin

> 
> # DengueDataset6 <- getGEO("GSE13052", GSEMatrix = T, AnnotGPL = T)
> # DengueDataset6 <- DengueDataset6$GSE13052_series_matrix.txt.gz
> # 
> # save(DengueDataset6, file = "./Data/DengueDataset6.rda")
> 
> load("./Data/DengueDataset6.rda")
> 
> 
> Expr_Dengue6 <- exprs(DengueDataset6)
> Pheno_Dengue6 <- pData(DengueDataset6)
> FeatData_Dengue6 <- fData(DengueDataset6)
> 
> 
> ############################
> ## Annotation
> 
> ## Expr_Dengue6
> head(rownames(Expr_Dengue6))
[1] "GI_10047093-S" "GI_10047099-S" "GI_10047103-S" "GI_10047105-S"
[5] "GI_10047121-S" "GI_10047123-S"
> rownames(Expr_Dengue6) <- FeatData_Dengue6$`Gene symbol`
> summary(is.na(rownames(Expr_Dengue6)))
   Mode   FALSE 
logical   24352 
> #rownames(Expr_Dengue6) <- gsub("-","", rownames(Expr_Dengue6))
> #rownames(Expr_Dengue6) <- gsub("_","",rownames(Expr_Dengue6))
> sel <- which(apply(Expr_Dengue6, 1, function(x) all(is.finite(x)) ))
> Expr_Dengue6 <- Expr_Dengue6[sel, ]
> Expr_Dengue6 <- Expr_Dengue6[!is.na(rownames(Expr_Dengue6)),]
> dim(Expr_Dengue6)
[1] 24352    30
> 
> range(Expr_Dengue6) 
[1]   -67.0 72420.6
> Expr_Dengue6 <- log2(Expr_Dengue6 + 68)
> Expr_Dengue6 <- t(scale(t(Expr_Dengue6), center = TRUE, scale = TRUE))
> 
> 
> ####################################
> 
> 
> ########################################################################################
> #########################################################################################
> ###### DF vs DHF and DSS
> 
> ### Modify the phenotype
> 
> # Pheno1
> Pheno_Dengue6$DiseaseStatus <- as.factor(Pheno_Dengue6$characteristics_ch1)
> levels(Pheno_Dengue6$DiseaseStatus) <- c("DSS", "DSS", "DF", "DF") 
> table(Pheno_Dengue6$DiseaseStatus)

DSS  DF 
 15  15 
> Pheno_Dengue6$DiseaseStatus <- factor(Pheno_Dengue6$DiseaseStatus, levels = c("DF", "DSS"))
> 
> all(rownames(Pheno_Dengue6) == colnames(Expr_Dengue6))
[1] TRUE
> 
> ClassDFvsDSS <- Pheno_Dengue6$DiseaseStatus
> 
> ####################################
> ## Load the severe malaria signature
> load("./Objs/RF_Comp.rda")
> 
> #################
> ## Predict in the Dengue dataset (DF vs DSS)
> 
> TestingData_Dengue <- t(Expr_Dengue6)
> 
> PredVotes_Dengue <- predict(RF_Comp, newdata = TestingData_Dengue, type = "vote")
> PredResponse_Dengue <- predict(RF_Comp, TestingData_Dengue, type="response")
> 
> ROCTest <- roc(ClassDFvsDSS, PredVotes_Dengue[,2], plot = F, print.auc = TRUE, levels = c("DF", "DSS"), direction = "<", col = "blue", lwd = 2, grid = TRUE, auc = TRUE, ci = TRUE)
> ROCTest

Call:
roc.default(response = ClassDFvsDSS, predictor = PredVotes_Dengue[,     2], levels = c("DF", "DSS"), direction = "<", auc = TRUE,     ci = TRUE, plot = F, print.auc = TRUE, col = "blue", lwd = 2,     grid = TRUE)

Data: PredVotes_Dengue[, 2] in 15 controls (ClassDFvsDSS DF) < 15 cases (ClassDFvsDSS DSS).
Area under the curve: 0.6444
95% CI: 0.424-0.8649 (DeLong)
> 
> # For ROC and PRC curves
> sscurves_Dengue6 <- evalmod(scores = PredVotes_Dengue[,2], labels = ClassDFvsDSS)
> sscurves_Dengue6

    === AUCs ===

     Model name Dataset ID Curve type       AUC
   1         m1          1        ROC 0.6444444
   2         m1          1        PRC 0.5659573


    === Input data ===

     Model name Dataset ID # of negatives # of positives
   1         m1          1             15             15

> ROC_Dengue6 <- autoplot(sscurves_Dengue6, curvetype = c("ROC")) + labs(title = "ROC curve of the complicated malaria signature in GSE13052 (Dengue fever)") + annotate("text", x = .65, y = .25, label = paste("AUC = 0.64"), size = 3)
> PRC_Dengue6 <- autoplot(sscurves_Dengue6, curvetype = c("PRC")) + labs(title = "PRC curve of the complicated malaria signature in GSE13052 (Dengue fever)") + annotate("text", x = .65, y = .25, label = paste("AUPRC = 0.566"), size = 3)
> 
> save(ROC_Dengue6, PRC_Dengue6, file = "./Objs/Dengue6_Curves.rda")
> 
> 
> ####################################
> ## Load the cerebral malaria signature
> load("./Objs/RF_Cerebral.rda")
> 
> #################
> ## Predict in the Dengue dataset (DF vs DSS)
> PredVotes_Dengue_cerebral <- predict(RF_Cerebral, newdata = TestingData_Dengue, type = "vote")
> PredResponse_Dengue_cerebral <- predict(RF_Cerebral, TestingData_Dengue, type="response")
> 
> ROCTest_cerebral <- roc(ClassDFvsDSS, PredVotes_Dengue_cerebral[,2], plot = F, print.auc = TRUE, levels = c("DF", "DSS"), direction = "<", col = "blue", lwd = 2, grid = TRUE, auc = TRUE, ci = TRUE)
> ROCTest_cerebral

Call:
roc.default(response = ClassDFvsDSS, predictor = PredVotes_Dengue_cerebral[,     2], levels = c("DF", "DSS"), direction = "<", auc = TRUE,     ci = TRUE, plot = F, print.auc = TRUE, col = "blue", lwd = 2,     grid = TRUE)

Data: PredVotes_Dengue_cerebral[, 2] in 15 controls (ClassDFvsDSS DF) < 15 cases (ClassDFvsDSS DSS).
Area under the curve: 0.2956
95% CI: 0.09316-0.498 (DeLong)
> 
> # For ROC and PRC curves
> sscurves_Dengue6_cerebral <- evalmod(scores = PredVotes_Dengue_cerebral[,2], labels = ClassDFvsDSS)
> sscurves_Dengue6_cerebral

    === AUCs ===

     Model name Dataset ID Curve type       AUC
   1         m1          1        ROC 0.2955556
   2         m1          1        PRC 0.3848956


    === Input data ===

     Model name Dataset ID # of negatives # of positives
   1         m1          1             15             15

> ROC_Dengue6_cerebral <- autoplot(sscurves_Dengue6_cerebral, curvetype = c("ROC")) + labs(title = "ROC curve of the cerebral malaria signature in GSE13052 (Dengue fever)") + annotate("text", x = .65, y = .25, label = paste("AUC = 0.30"), size = 3)
> PRC_Dengue6_cerebral <- autoplot(sscurves_Dengue6_cerebral, curvetype = c("PRC")) + labs(title = "PRC curve of the cerebral malaria signature in GSE13052 (Dengue fever)") + annotate("text", x = .65, y = .25, label = paste("AUPRC = 0.38"), size = 3)
> 
> save(ROC_Dengue6_cerebral, PRC_Dengue6_cerebral, file = "./Objs/Dengue6_Curves_cerebral.rda")
> 
> 
> 
> proc.time()
   user  system elapsed 
  2.427   0.369   3.298 
